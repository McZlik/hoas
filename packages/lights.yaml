light:
  - platform: template
    lights:
      hallway_light:
        friendly_name: "Hallway Light"
        unique_id: hallway_light
        value_template: "{{ is_state('switch.hallway_light_switch', 'on') }}"
        turn_on:
          service: switch.turn_on
          target:
            entity_id: switch.hallway_light_switch
        turn_off:
          service: switch.turn_off
          target:
            entity_id: switch.hallway_light_switch

  - platform: group
    name: "Office Lights"
    unique_id: office_lights_group
    entities:
      - light.office_ceiling_lamp_01
      - light.office_ceiling_lamp_02
      - light.office_ceiling_lamp_03

automation:
  - alias: Sunset lights
    id: sunset_lights
    description: Activate lights 30 min before sunset
    triggers:
      - trigger: sun
        event: sunset
        offset: "-00:30:00"
    conditions: []
    actions:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 25
        target:
          entity_id: light.dining_room_dimmer
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 75
        target:
          entity_id: light.living_room_dimmer
    mode: single

  - alias: Office lights dynamic brightness
    id: office_lights_dynamic_brightness
    description: Adjust office lights brightness based on sun position and time
    mode: restart
    triggers:
      - trigger: state
        entity_id:
          - binary_sensor.office_presence_occupancy
      - trigger: time_pattern
        minutes: "/5"  # Check every 5 minutes for smooth transitions
      - trigger: sun
        event: sunrise
      - trigger: sun
        event: sunset
    conditions:
      - condition: state
        entity_id: binary_sensor.office_presence_occupancy
        state: "on"
    actions:
      - action: light.turn_on
        target:
          entity_id: light.office_lights
        data:
          brightness_pct: >
            {% set now_hour = now().hour %}
            {% set sun_elevation = state_attr('sun.sun', 'elevation') | float %}
            
            {# Work hours: 8 AM to 5 PM - full brightness #}
            {% if now_hour >= 8 and now_hour < 17 %}
              100
            {# Evening hours: 5 PM to 10 PM - smooth dimming based on sun elevation #}
            {% elif now_hour >= 17 and now_hour < 22 %}
              {# Formula: maps sun elevation from 15° to -15° onto brightness range 80% to 25% #}
              {# When sun_elevation = 15: brightness = 80% #}
              {# When sun_elevation = -15: brightness = 25% #}
              {% set max_elevation = 15 %}
              {% set min_elevation = -15 %}
              {% set max_brightness = 80 %}
              {% set min_brightness = 25 %}
            
              {# Clamp elevation to our range #}
              {% set clamped_elevation = [min_elevation, [max_elevation, sun_elevation] | min] | max %}
            
              {# Linear interpolation formula #}
              {% set brightness_range = max_brightness - min_brightness %}
              {% set elevation_range = max_elevation - min_elevation %}
              {% set brightness = min_brightness + (brightness_range * (clamped_elevation - min_elevation) / elevation_range) %}
            
              {{ brightness | round(0) | int }}
            {# Night hours: 10 PM to 8 AM - very dim #}
            {% else %}
              15
            {% endif %}

  - alias: Office lights presence
    id: office_lights_presence
    description: Turn off office lights when no presence
    mode: single
    triggers:
      - trigger: state
        entity_id:
          - binary_sensor.office_presence_occupancy
        to: "off"
    conditions: []
    actions:
      - action: light.turn_off
        target:
          entity_id: light.office_lights


