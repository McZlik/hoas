# Climate packages

# Maybe useful for living room when we have multiple thermostats
#climate:
#  - platform: climate_template
#    name: "Office Thermostat"
#    unique_id: office_thermostat_template
#    modes:
#      - "auto"
#      - "heat"
#      - "off"
#    min_temp: 18
#    max_temp: 24
#    # This reads the temperature from your external Zigbee sensor
#    current_temperature_template: "{{ states('sensor.office_temperature_temperature') | float(0) }}"
#    # This reads the target temperature from your actual radiator thermostat
#    target_temperature_template: "{{ state_attr('climate.office_radiator', 'temperature') | float(21) }}"
#    # This reads the current action (heating or idle) from your radiator thermostat
#    hvac_action_template: "{{ state_attr('climate.office_radiator', 'hvac_action') | default('idle') }}"
#    # This defines what happens when you change the temperature on your new "Office Thermostat"
#    set_temperature:
#      - service: climate.set_temperature
#        # The 'target' key is now the recommended way to specify entities
#        target:
#          entity_id: climate.office_radiator
#        data:
#          temperature: "{{ temperature }}"
#    # This defines what happens when you change the HVAC mode (heat/off)
#    set_hvac_mode:
#      - service: climate.set_hvac_mode
#        target:
#          entity_id: climate.office_radiator
#        data:
#          hvac_mode: "{{ hvac_mode }}

# Temperature Configuration
input_number:
  living_room_temp_low:
    name: "Living Room Low Temperature"
    min: 15
    max: 25
    step: 0.5
    initial: 19
    unit_of_measurement: "째C"
    icon: mdi:thermometer-low

  living_room_temp_high:
    name: "Living Room High Temperature"
    min: 15
    max: 25
    step: 0.5
    initial: 21
    unit_of_measurement: "째C"
    icon: mdi:thermometer-high

  office_temp_low:
    name: "Office Low Temperature"
    min: 15
    max: 25
    step: 0.5
    initial: 19
    unit_of_measurement: "째C"
    icon: mdi:thermometer-low

  office_temp_high:
    name: "Office High Temperature"
    min: 15
    max: 25
    step: 0.5
    initial: 21
    unit_of_measurement: "째C"
    icon: mdi:thermometer-high

# Temperature Schedule Configuration
input_boolean:
  living_room_schedule_enabled:
    name: "Living Room Schedule Enabled"
    icon: mdi:calendar-clock
  office_schedule_enabled:
    name: "Office Schedule Enabled"
    icon: mdi:calendar-clock

# Schedule entities for temperature control
schedule:
  living_room_high_temp_schedule:
    name: "Living Room High Temperature Schedule"
    monday:
      - from: "17:00:00"
        to: "22:00:00"
    tuesday:
      - from: "17:00:00"
        to: "22:00:00"
    wednesday:
      - from: "17:00:00"
        to: "22:00:00"
    thursday:
      - from: "17:00:00"
        to: "22:00:00"
    friday:
      - from: "17:00:00"
        to: "22:00:00"
    saturday:
      - from: "10:00:00"
        to: "22:00:00"
    sunday:
      - from: "10:00:00"
        to: "22:00:00"

  office_high_temp_schedule:
    name: "Office High Temperature Schedule"
    monday:
      - from: "09:00:00"
        to: "17:00:00"
    tuesday:
      - from: "09:00:00"
        to: "17:00:00"
    wednesday:
      - from: "09:00:00"
        to: "17:00:00"
    thursday:
      - from: "09:00:00"
        to: "17:00:00"
    friday:
      - from: "09:00:00"
        to: "17:00:00"

automation:
  - alias: "Office Sync External Temp to TRV"
    id: office_external_temp_to_trv
    description: "Sends the external sensor temperature to the Sonoff TRV"
    trigger:
      - platform: state
        entity_id:
          - sensor.office_temperature_temperature
    condition:
      # This ensures we only send valid number values
      - condition: template
        value_template: "{{ trigger.to_state.state not in ['unavailable', 'unknown'] }}"
    action:
      - service: number.set_value
        target:
          entity_id: number.office_radiator_external_temperature_input #<-- Make sure this is correct
        data:
          value: "{{ states('sensor.office_temperature_temperature') }}"
    mode: single

  - alias: "Living Room Sync External Temp to TRV"
    id: living_room_external_temp_to_trv
    description: "Sends the external sensor temperature to the Sonoff TRV"
    trigger:
      - platform: state
        entity_id:
          - sensor.living_room_temperature_temperature
    condition:
      # This ensures we only send valid number values
      - condition: template
        value_template: "{{ trigger.to_state.state not in ['unavailable', 'unknown'] }}"
    action:
      - service: number.set_value
        target:
          entity_id: number.living_room_radiator_external_temperature_input #<-- Make sure this is correct
        data:
          value: "{{ states('sensor.living_room_temperature_temperature') }}"
    mode: single

  - alias: "Living Room Temperature Schedule Control"
    id: living_room_temperature_schedule_control
    description: "Control living room temperature based on schedule"
    trigger:
      - platform: state
        entity_id: schedule.living_room_high_temp_schedule
      - platform: homeassistant
        event: start
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: schedule.living_room_high_temp_schedule
                state: "on"
            sequence:
              - service: climate.set_temperature
                target:
                  entity_id: climate.living_room_radiator
                data:
                  temperature: "{{ states('input_number.living_room_temp_high') | float }}"
        default:
          - service: climate.set_temperature
            target:
              entity_id: climate.living_room_radiator
            data:
              temperature: "{{ states('input_number.living_room_temp_low') | float }}"
    mode: single

  - alias: "Office Temperature Schedule Control"
    id: office_temperature_schedule_control
    description: "Control office temperature based on schedule"
    trigger:
      - platform: state
        entity_id: schedule.office_high_temp_schedule
      - platform: homeassistant
        event: start
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: schedule.office_high_temp_schedule
                state: "on"
            sequence:
              - service: climate.set_temperature
                target:
                  entity_id: climate.office_radiator
                data:
                  temperature: "{{ states('input_number.office_temp_high') | float }}"
        default:
          - service: climate.set_temperature
            target:
              entity_id: climate.office_radiator
            data:
              temperature: "{{ states('input_number.office_temp_low') | float }}"
    mode: single

  - alias: "Living Room Presence Control"
    id: living_room_presence_control
    description: "Control living room heating based on presence of Thijs or Sal"
    trigger:
      - platform: state
        entity_id: person.thijs
      - platform: state
        entity_id: person.sal
      - platform: homeassistant
        event: start
    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: person.thijs
                    state: "home"
                  - condition: state
                    entity_id: person.sal
                    state: "home"
            sequence:
              - service: climate.set_hvac_mode
                target:
                  entity_id: climate.living_room_radiator
                data:
                  hvac_mode: "heat"
        default:
          - service: climate.set_hvac_mode
            target:
              entity_id: climate.living_room_radiator
            data:
              hvac_mode: "off"
    mode: single

  - alias: "Office Presence Control"
    id: office_presence_control
    description: "Control office heating based on Thijs presence"
    trigger:
      - platform: state
        entity_id: person.thijs
      - platform: homeassistant
        event: start
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: person.thijs
                state: "home"
            sequence:
              - service: climate.set_hvac_mode
                target:
                  entity_id: climate.office_radiator
                data:
                  hvac_mode: "heat"
        default:
          - service: climate.set_hvac_mode
            target:
              entity_id: climate.office_radiator
            data:
              hvac_mode: "off"
    mode: single